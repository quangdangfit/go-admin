// Code generated by MockGen. DO NOT EDIT.
// Source: app/services/role.go

package mocks

import (
	context "context"
	gomock "github.com/golang/mock/gomock"
	models "github.com/quangdangfit/go-admin/app/models"
	schema "github.com/quangdangfit/go-admin/app/schema"
	reflect "reflect"
)

// MockIRoleService is a mock of IRoleService interface
type MockIRoleService struct {
	ctrl     *gomock.Controller
	recorder *MockIRoleServiceMockRecorder
}

// MockIRoleServiceMockRecorder is the mock recorder for MockIRoleService
type MockIRoleServiceMockRecorder struct {
	mock *MockIRoleService
}

// NewMockIRoleService creates a new mock instance
func NewMockIRoleService(ctrl *gomock.Controller) *MockIRoleService {
	mock := &MockIRoleService{ctrl: ctrl}
	mock.recorder = &MockIRoleServiceMockRecorder{mock}
	return mock
}

// EXPECT returns an object that allows the caller to indicate expected use
func (_m *MockIRoleService) EXPECT() *MockIRoleServiceMockRecorder {
	return _m.recorder
}

// CreateRole mocks base method
func (_m *MockIRoleService) Create(ctx context.Context, item *schema.RoleBodyParams) (*models.Role, error) {
	ret := _m.ctrl.Call(_m, "Create", ctx, item)
	ret0, _ := ret[0].(*models.Role)
	ret1, _ := ret[1].(error)
	return ret0, ret1
}

// CreateRole indicates an expected call of CreateRole
func (_mr *MockIRoleServiceMockRecorder) CreateRole(arg0, arg1 interface{}) *gomock.Call {
	return _mr.mock.ctrl.RecordCallWithMethodType(_mr.mock, "Create", reflect.TypeOf((*MockIRoleService)(nil).Create), arg0, arg1)
}
